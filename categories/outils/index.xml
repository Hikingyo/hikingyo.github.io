<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Outils on Hikingyo' Blog</title><link>https://hikingyo.com/categories/outils/</link><description>Recent content in Outils on Hikingyo' Blog</description><generator>Hugo -- gohugo.io</generator><language>fr</language><lastBuildDate>Sun, 07 Sep 2025 18:10:00 +0000</lastBuildDate><atom:link href="https://hikingyo.com/categories/outils/index.xml" rel="self" type="application/rss+xml"/><item><title>Pre-commit, pour des MR bien léchées</title><link>https://hikingyo.com/posts/articles/pre_commit/</link><pubDate>Sun, 07 Sep 2025 18:10:00 +0000</pubDate><guid>https://hikingyo.com/posts/articles/pre_commit/</guid><description>&lt;h2 id="de-lart-de-la-review-zen"&gt;De l’art de la review zen&lt;/h2&gt;
&lt;p&gt;Combien d’heures se perdent en &lt;em&gt;merge requests&lt;/em&gt; sur des broutilles ?
Espaces en trop. Imports mal triés. Fichiers oubliés.
Ou pire : un secret API balancé par erreur dans l’historique.&lt;/p&gt;
&lt;p&gt;Ce temps est précieux. C’est du temps d’ingénieurs, du temps de reviewers — et beaucoup de frustration.&lt;/p&gt;
&lt;p&gt;Avant de plonger dans &lt;code&gt;pre-commit&lt;/code&gt;, rappel express sur les hooks Git.
Ce sont de simples scripts qui s’exécutent à différents moments du cycle de vie Git.
Ils servent à automatiser des tâches, appliquer des règles, ou personnaliser le comportement de Git.&lt;/p&gt;</description></item></channel></rss>